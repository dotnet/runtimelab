// Generated by `wit-bindgen` 0.30.0. DO NOT EDIT!
// <auto-generated />
#nullable enable
using System;
using System.Runtime.CompilerServices;
using System.Collections;
using System.Runtime.InteropServices;
using System.Text;
using System.Collections.Generic;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;

namespace LibraryWorld {

    public interface ILibraryWorld {
        static abstract void TestHttp(ushort port);

        static abstract int ReturnsPrimitiveInt();

        static abstract bool ReturnsPrimitiveBool();

        static abstract uint ReturnsPrimitiveChar();

        static abstract void EnsureManagedClassLoaders();

        static abstract int CheckSimpleExceptionHandling();

        static abstract int CheckSimpleGcCollect();

    }

    public readonly struct None {}

    [StructLayout(LayoutKind.Sequential)]
    public readonly struct Result<Ok, Err>
    {
        public readonly byte Tag;
        private readonly object value;

        private Result(byte tag, object value)
        {
            Tag = tag;
            this.value = value;
        }

        public static Result<Ok, Err> ok(Ok ok)
        {
            return new Result<Ok, Err>(OK, ok!);
        }

        public static Result<Ok, Err> err(Err err)
        {
            return new Result<Ok, Err>(ERR, err!);
        }

        public bool IsOk => Tag == OK;
        public bool IsErr => Tag == ERR;

        public Ok AsOk
        {
            get
            {
                if (Tag == OK)
                return (Ok)value;
                else
                throw new ArgumentException("expected OK, got " + Tag);
            }
        }

        public Err AsErr
        {
            get
            {
                if (Tag == ERR)
                return (Err)value;
                else
                throw new ArgumentException("expected ERR, got " + Tag);
            }
        }

        public const byte OK = 0;
        public const byte ERR = 1;
    }

    namespace exports {
        public static class LibraryWorld
        {

            [UnmanagedCallersOnly(EntryPoint = "test-http")]
            public static unsafe void wasmExportTestHttp(int p0) {

                LibraryWorldImpl.TestHttp((((ushort)p0)));

            }

            [UnmanagedCallersOnly(EntryPoint = "returns-primitive-int")]
            public static unsafe int wasmExportReturnsPrimitiveInt() {

                int ret;
                ret = LibraryWorldImpl.ReturnsPrimitiveInt();
                return ret;

            }

            [UnmanagedCallersOnly(EntryPoint = "cabi_post_returns-primitive-int")]
            public static void cabi_post_wasmExportReturnsPrimitiveInt(int returnValue) {
                Console.WriteLine("TODO: cabi_post_returns-primitive-int");
            }

            [UnmanagedCallersOnly(EntryPoint = "returns-primitive-bool")]
            public static unsafe int wasmExportReturnsPrimitiveBool() {

                bool ret;
                ret = LibraryWorldImpl.ReturnsPrimitiveBool();
                return (ret ? 1 : 0);

            }

            [UnmanagedCallersOnly(EntryPoint = "cabi_post_returns-primitive-bool")]
            public static void cabi_post_wasmExportReturnsPrimitiveBool(int returnValue) {
                Console.WriteLine("TODO: cabi_post_returns-primitive-bool");
            }

            [UnmanagedCallersOnly(EntryPoint = "returns-primitive-char")]
            public static unsafe int wasmExportReturnsPrimitiveChar() {

                uint ret;
                ret = LibraryWorldImpl.ReturnsPrimitiveChar();
                return ((int)ret);

            }

            [UnmanagedCallersOnly(EntryPoint = "cabi_post_returns-primitive-char")]
            public static void cabi_post_wasmExportReturnsPrimitiveChar(int returnValue) {
                Console.WriteLine("TODO: cabi_post_returns-primitive-char");
            }

            [UnmanagedCallersOnly(EntryPoint = "ensure-managed-class-loaders")]
            public static unsafe void wasmExportEnsureManagedClassLoaders() {

                LibraryWorldImpl.EnsureManagedClassLoaders();

            }

            [UnmanagedCallersOnly(EntryPoint = "check-simple-exception-handling")]
            public static unsafe int wasmExportCheckSimpleExceptionHandling() {

                int ret;
                ret = LibraryWorldImpl.CheckSimpleExceptionHandling();
                return ret;

            }

            [UnmanagedCallersOnly(EntryPoint = "cabi_post_check-simple-exception-handling")]
            public static void cabi_post_wasmExportCheckSimpleExceptionHandling(int returnValue) {
                Console.WriteLine("TODO: cabi_post_check-simple-exception-handling");
            }

            [UnmanagedCallersOnly(EntryPoint = "check-simple-gc-collect")]
            public static unsafe int wasmExportCheckSimpleGcCollect() {

                int ret;
                ret = LibraryWorldImpl.CheckSimpleGcCollect();
                return ret;

            }

            [UnmanagedCallersOnly(EntryPoint = "cabi_post_check-simple-gc-collect")]
            public static void cabi_post_wasmExportCheckSimpleGcCollect(int returnValue) {
                Console.WriteLine("TODO: cabi_post_check-simple-gc-collect");
            }

        }
    }

}
