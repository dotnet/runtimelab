<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <LinkNativeDependsOn Condition="'$(_targetOS)' == 'browser' and '$(DotNetJsApi)' == 'true'">$(LinkNativeDependsOn);PrepareDotNetJsApiForLinking</LinkNativeDependsOn>
  </PropertyGroup>
  <ItemGroup>
    <EmccExportedFunction Include="_free" />
    <EmccExportedFunction Include="_htons" />
    <EmccExportedFunction Include="_malloc" />
    <EmccExportedFunction Include="_memalign" />
    <EmccExportedFunction Include="_memset" />
    <EmccExportedFunction Include="_ntohs" />
    <EmccExportedFunction Include="stackAlloc" />
    <EmccExportedFunction Include="stackRestore" />
    <EmccExportedFunction Include="stackSave" />
    <EmccExportedFunction Include="_fmod" />
    <EmccExportedFunction Include="_atan2" />
    <EmccExportedFunction Include="_fma" />
    <EmccExportedFunction Include="_pow" />
    <EmccExportedFunction Include="_fmodf" />
    <EmccExportedFunction Include="_atan2f" />
    <EmccExportedFunction Include="_fmaf" />
    <EmccExportedFunction Include="_powf" />
    <EmccExportedFunction Include="_asin" />
    <EmccExportedFunction Include="_asinh" />
    <EmccExportedFunction Include="_acos" />
    <EmccExportedFunction Include="_acosh" />
    <EmccExportedFunction Include="_atan" />
    <EmccExportedFunction Include="_atanh" />
    <EmccExportedFunction Include="_cbrt" />
    <EmccExportedFunction Include="_cos" />
    <EmccExportedFunction Include="_cosh" />
    <EmccExportedFunction Include="_exp" />
    <EmccExportedFunction Include="_log" />
    <EmccExportedFunction Include="_log2" />
    <EmccExportedFunction Include="_log10" />
    <EmccExportedFunction Include="_sin" />
    <EmccExportedFunction Include="_sinh" />
    <EmccExportedFunction Include="_tan" />
    <EmccExportedFunction Include="_tanh" />
    <EmccExportedFunction Include="_asinf" />
    <EmccExportedFunction Include="_asinhf" />
    <EmccExportedFunction Include="_acosf" />
    <EmccExportedFunction Include="_acoshf" />
    <EmccExportedFunction Include="_atanf" />
    <EmccExportedFunction Include="_atanhf" />
    <EmccExportedFunction Include="_cbrtf" />
    <EmccExportedFunction Include="_cosf" />
    <EmccExportedFunction Include="_coshf" />
    <EmccExportedFunction Include="_expf" />
    <EmccExportedFunction Include="_logf" />
    <EmccExportedFunction Include="_log2f" />
    <EmccExportedFunction Include="_log10f" />
    <EmccExportedFunction Include="_sinf" />
    <EmccExportedFunction Include="_sinhf" />
    <EmccExportedFunction Include="_tanf" />
    <EmccExportedFunction Include="_tanhf" />
    <EmccExportedRuntimeMethod Include="FS" />
    <EmccExportedRuntimeMethod Include="out" />
    <EmccExportedRuntimeMethod Include="err" />
    <EmccExportedRuntimeMethod Include="ccall" />
    <EmccExportedRuntimeMethod Include="cwrap" />
    <EmccExportedRuntimeMethod Include="setValue" />
    <EmccExportedRuntimeMethod Include="getValue" />
    <EmccExportedRuntimeMethod Include="addRunDependency" />
    <EmccExportedRuntimeMethod Include="addFunction" />
    <EmccExportedRuntimeMethod Include="UTF8ToString" />
    <EmccExportedRuntimeMethod Include="UTF8ArrayToString" />
    <EmccExportedRuntimeMethod Include="stringToUTF8Array" />
    <EmccExportedRuntimeMethod Include="FS_createPath" />
    <EmccExportedRuntimeMethod Include="FS_createDataFile" />
    <EmccExportedRuntimeMethod Include="removeRunDependency" />
    <EmccExportedRuntimeMethod Include="safeSetTimeout" />
    <EmccExportedRuntimeMethod Include="runtimeKeepalivePush" />
    <EmccExportedRuntimeMethod Include="runtimeKeepalivePop" />
    <EmccExportedRuntimeMethod Include="callMain" />
  </ItemGroup>

  <Target Name="PrepareDotNetJsApiForLinking">
    <PropertyGroup>
      <_WasmIntermediateOutputPath Condition="'$(WasmBuildingForNestedPublish)' == ''">$([MSBuild]::NormalizeDirectory($(IntermediateOutputPath), 'wasm'))</_WasmIntermediateOutputPath>
      <_EmccLinkRsp>$(_WasmIntermediateOutputPath)emcc-link.rsp</_EmccLinkRsp>
    </PropertyGroup>
    <PropertyGroup>
      <_EmccExportedLibraryFunction>&quot;[@(EmccExportedLibraryFunction -> '%27%(Identity)%27', ',')]&quot;</_EmccExportedLibraryFunction>
      <_EmccExportedRuntimeMethods>&quot;[@(EmccExportedRuntimeMethod -> '%27%(Identity)%27', ',')]&quot;</_EmccExportedRuntimeMethods>
      <_EmccExportedFunctions>@(EmccExportedFunction -> '%(Identity)',',')</_EmccExportedFunctions>
      <EmccStackSize Condition="'$(EmccStackSize)' == ''">5MB</EmccStackSize>
      <EmccInitialHeapSize Condition="'$(EmccInitialHeapSize)' == '' and '$(_WasmCalculatedInitialHeapSize)' != '' and $(_WasmCalculatedInitialHeapSize) > 16777216">$(_WasmCalculatedInitialHeapSize)</EmccInitialHeapSize>
      <EmccInitialHeapSize Condition="'$(EmccInitialHeapSize)' == ''">16777216</EmccInitialHeapSize>
      <NativeBinary>$(NativeOutputPath)dotnet.native.js</NativeBinary>
    </PropertyGroup>
    <ItemGroup>
      <!-- Default values for flags passed from emscripten to dotnet/runtime.js. Left here only to minimize changes to typescript -->
      <EmscriptenEnvVars Include="DISABLE_LEGACY_JS_INTEROP=1" />
      <EmscriptenEnvVars Include="WASM_ENABLE_SIMD=0" />
      <EmscriptenEnvVars Include="WASM_ENABLE_EH=1" />
      <EmscriptenEnvVars Include="ENABLE_AOT_PROFILER=0" />
      <EmscriptenEnvVars Include="ENABLE_BROWSER_PROFILER=0" />
      <EmscriptenEnvVars Include="RUN_AOT_COMPILATION=0" />

      <_DotNetJsLinkerFlag Include="$(EmccFlags)" />
      <_DotNetJsLinkerFlag Include="-s MAXIMUM_MEMORY=$(EmccMaximumHeapSize)" Condition="'$(EmccMaximumHeapSize)' != ''" />
      <_DotNetJsLinkerFlag Include="-Wl,--export,__main_argc_argv" /><!-- Export main, a temporal solution until we have a way to export async main -->
      <_DotNetJsLinkerFlag Include="-s EXPORT_ES6=1" /><!-- Produce ES6 module as expented by hosting API -->
      <_DotNetJsLinkerFlag Include="-s MODULARIZE=1" /><!-- Produce ES6 module as expented by hosting API -->
      <_DotNetJsLinkerFlag Include="-s INVOKE_RUN=0" /><!-- Don't automatically run main, it is called explicitly by ser -->
      <_DotNetJsLinkerFlag Include="-s EXPORT_NAME=&quot;'createDotnetRuntime'&quot;" /><!-- Export emscripten factory as 'createDotnetRuntime', as expented by hosting API -->
      <_DotNetJsLinkerFlag Include="-s ENVIRONMENT=&quot;'web,webview,worker,node,shell'&quot;" /><!-- Add support for all enviroments (default list is smaller) -->
      <_DotNetJsLinkerFlag Condition="'$(EmccEnvironment)' != ''" Include="-s ENVIRONMENT=&quot;$(EmccEnvironment)&quot;" />
      <_DotNetJsLinkerFlag Include="-s FORCE_FILESYSTEM=1" /><!-- We are using JS API for accessing FS -->
      <_DotNetJsLinkerFlag Include="$(EmccLinkOptimizationFlag)" />
      <_DotNetJsLinkerFlag Include="-s INITIAL_MEMORY=$(EmccInitialHeapSize)" />
      <_DotNetJsLinkerFlag Include="-s STACK_SIZE=$(EmccStackSize)" />
      <_DotNetJsLinkerFlag Condition="'$(EmccEnableAssertions)' == 'true'" Include="-s ASSERTIONS=1" />
      <_DotNetJsLinkerFlag Include="--emit-symbol-map" Condition="'$(WasmEmitSymbolMap)' == 'true'" />

      <!-- JavaScript modifications to javascript produced by emscripten -->
      <JSFileType Include="extpre.js"  Kind="extern-pre-js" />
      <JSFileType Include="iffe.js"    Kind="extern-pre-js" />
      <JSFileType Include="pre.js"     Kind="pre-js" />
      <JSFileType Include="lib.js"     Kind="js-library" />
      <JSFileType Include="post.js"    Kind="post-js" />
      <JSFileType Include="extpost.js" Kind="extern-post-js" />
      <_WasmExtraJSFile Include="$(IlcFrameworkNativePath)src\es6\*.%(JSFileType.Identity)" Kind="%(JSFileType.Kind)" />
      <_DotNetJsLinkerFlag Include="--%(_WasmExtraJSFile.Kind) &quot;%(_WasmExtraJSFile.Identity)&quot;" Condition="'%(_WasmExtraJSFile.Kind)' != ''" />

      <!-- Exported functions required by user or runtime API -->
      <_DotNetJsLinkerFlag Include="-s DEFAULT_LIBRARY_FUNCS_TO_INCLUDE=$(_EmccExportedLibraryFunction)" Condition="'$(_EmccExportedLibraryFunction)' != ''" />
      <_DotNetJsLinkerFlag Include="-s EXPORTED_RUNTIME_METHODS=$(_EmccExportedRuntimeMethods)" />
      <_DotNetJsLinkerFlag Include="-s EXPORTED_FUNCTIONS=$(_EmccExportedFunctions)" />
      <_DotNetJsLinkerFlag Include="$(EmccExtraLDFlags)" />
    </ItemGroup>
    <WriteLinesToFile Lines="@(_DotNetJsLinkerFlag)" File="$(_EmccLinkRsp)" Overwrite="true" WriteOnlyWhenDifferent="true" />
    <PropertyGroup>
      <EmccExtraArgs>$(EmccExtraArgs) "@$(_EmccLinkRsp)"</EmccExtraArgs>
    </PropertyGroup>
  </Target>
  <Target Name="CopyDotnetJsAfterLinking" AfterTargets="LinkNativeLlvm">
    <ItemGroup>
      <_FilesToCopyToNative Include="$(IlcFrameworkNativePath)\dotnet*.js" />
      <_FilesToCopyToNative Include="$(IlcFrameworkNativePath)\dotnet*.map" Condition="'$(WasmEmitSourceMap)' == 'true'" />
      <_FilesToCopyToNative Include="@(WasmExtraFilesToDeploy)" /><!-- Use defined extra files to be included in the build output -->
    </ItemGroup>
    <Copy SourceFiles="@(_FilesToCopyToNative)" DestinationFolder="$(NativeOutputPath)" />
  </Target>
</Project>