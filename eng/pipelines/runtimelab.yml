# Setting batch to true, triggers one build at a time.
# if there is a push while a build in progress, it will wait,
# until the running build finishes, and produce a build with all the changes
# that happened during the last build.
trigger:
  batch: true
  branches:
    include:
    - feature/*
  paths:
    include:
    - '*'
    exclude:
    - '**.md'
    - eng/Version.Details.xml
    - .devcontainer/*
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

pr:
  branches:
    include:
    - feature/*
  paths:
    include:
    - '*'
    exclude:
    - '**.md'
    - eng/Version.Details.xml
    - .devcontainer/*
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

variables:
  - template: /eng/pipelines/common/variables.yml
  - ${{ if and(ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest')) }}:
    - name: TeamName
      value: dotnet-core

extends:
  template:  /eng/pipelines/common/templates/pipeline-with-resources.yml
  parameters:
    stages:
    - stage: Build
      jobs:
      #
      # Build with Release libraries and Debug runtime
      #
      - ${{ if ne(variables.isOfficialBuild, true) }}:
        - template: /eng/pipelines/common/platform-matrix.yml
          parameters:
            jobTemplate: /eng/pipelines/common/global-build-job.yml
            buildConfig: Debug
            platforms:
          # - Linux_x64
            - windows_x64
            - OSX_x64
            - Browser_wasm_win
            - wasi_wasm_win
            jobParameters:
              timeoutInMinutes: 300
              testGroup: innerloop
              buildArgs: -s clr.aot+libs+nativeaot.packages -lc Release -rc Debug
              postBuildSteps:
                - template: /eng/pipelines/runtimelab/runtimelab-post-build-steps.yml
                  parameters:
                    librariesConfiguration: Release

      #
      # Build with Debug libraries and Checked runtime
      #
      - ${{ if ne(variables.isOfficialBuild, true) }}:
        - template: /eng/pipelines/common/platform-matrix.yml
          parameters:
            jobTemplate: /eng/pipelines/common/global-build-job.yml
            buildConfig: Checked
            platforms:
          # - linux_x64
            - windows_x64
            jobParameters:
              timeoutInMinutes: 100
              testGroup: innerloop
              buildArgs: -s clr+libs+host+packs -c debug -runtimeConfiguration Checked
              postBuildSteps:
                - template: /eng/pipelines/runtimelab/runtimelab-post-build-steps.yml
                  parameters:
                    uploadRuntimeTests: true
                    librariesConfiguration: Debug

      #
      # Build with Release libraries and Release runtime (used for official builds) - Wasm
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: Release
          platforms:
    #     - linux_x64        # Tests fail with a few errors, e.g. System.BadImageFormatException: Read out of bounds.  TODO-LLVM try to reinstate when more merged
    #     - linux_musl_x64
    #     - linux_arm64      # ILCompiler for LLVM depends on libLLVM.runtime.linux-arm64 with version (>= 11.0.0) which is missing https://github.com/microsoft/LLVMSharp/issues/177. TODO: reinstate when we remove LLVMSharp dependency
    #     - linux_arm        # ILCompiler for LLVM depends on libLLVM.runtime.linux-arm64 with version (>= 11.0.0) which is missing https://github.com/microsoft/LLVMSharp/issues/177. TODO: reinstate when we remove LLVMSharp dependency
    #     - linux_musl_arm64 # ILCompiler for LLVM depends on libLLVM.runtime.linux-arm64 with version (>= 11.0.0) which is missing https://github.com/microsoft/LLVMSharp/issues/177. TODO: reinstate when we remove LLVMSharp dependency
    #     - windows_x64      # Part of the combined (target + host) WASM build below
          - windows_arm64
          - OSX_x64
          - Browser_wasm_win
          - wasi_wasm_win
          jobParameters:
            timeoutInMinutes: 300
            isOfficialBuild: ${{ variables.isOfficialBuild }}
            testGroup: innerloop
            postBuildSteps:
              - template: /eng/pipelines/runtimelab/runtimelab-post-build-steps.yml
                parameters:
                  isOfficialBuild: ${{ variables.isOfficialBuild }}
                  uploadLibrariesTests: ${{ eq(variables.isOfficialBuild, false) }}
                  uploadIntermediateArtifacts: false
                  librariesConfiguration: Release
            ${{ if eq(variables.isOfficialBuild, false) }}:
              buildArgs: -s clr.aot+libs+nativeaot.packages -c $(_BuildConfig) /p:ArchiveTests=true
            ${{ if eq(variables.isOfficialBuild, true) }}:
              buildArgs: -s clr.aot+libs+nativeaot.packages -c $(_BuildConfig)

      #
      # Build with Release allConfigurations to produce packages
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/common/global-build-job.yml
          buildConfig: Release
          platforms:
          - windows_x64
          jobParameters:
            isOfficialBuild: ${{ variables.isOfficialBuild }}
            testGroup: innerloop
            nameSuffix: AllConfigurations
            buildArgs: -s libs -c $(_BuildConfig) -allConfigurations
            ${{ if eq(variables.isOfficialBuild, true) }}:
              postBuildSteps:
                - template: /eng/pipelines/runtimelab/runtimelab-post-build-steps.yml
                  parameters:
                    uploadIntermediateArtifacts: true
                    isOfficialBuild: true
                    librariesBinArtifactName: libraries_bin_official_allconfigurations

      # Installer official builds need to build installers and need the libraries all configurations build
      - ${{ if eq(variables.isOfficialBuild, true) }}:
        - template: /eng/pipelines/common/platform-matrix.yml
          parameters:
            jobTemplate: /eng/pipelines/installer/jobs/build-job.yml
            jobParameters:
              liveRuntimeBuildConfig: Release
              liveLibrariesBuildConfig: Release

    - ${{ if eq(variables.isOfficialBuild, true) }}:
      - template: /eng/pipelines/official/stages/publish.yml
        parameters:
          isOfficialBuild: ${{ variables.isOfficialBuild }}
