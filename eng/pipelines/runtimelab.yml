# Setting batch to true, triggers one build at a time.
# if there is a push while a build in progress, it will wait,
# until the running build finishes, and produce a build with all the changes
# that happened during the last build.
trigger:
  batch: true
  branches:
    include:
    - Utf8StringExperiment
  paths:
    include:
    - '*'
    - docs/manpages/*
    exclude:
    - eng/Version.Details.xml
    - .github/*
    - docs/*
    - CODE-OF-CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE.TXT
    - PATENTS.TXT
    - README.md
    - SECURITY.md
    - THIRD-PARTY-NOTICES.TXT

pr:
  branches:
    include:
    - Utf8StringExperiment
  paths:
    include:
    - '*'
    - docs/manpages/*
    exclude:
    - eng/Version.Details.xml
    - .github/*
    - docs/*
    - CODE-OF-CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE.TXT
    - PATENTS.TXT
    - README.md
    - SECURITY.md
    - THIRD-PARTY-NOTICES.TXT

variables:
  - template: /eng/pipelines/common/variables.yml

jobs:
#
# Checkout repository
#
- template: /eng/pipelines/common/checkout-job.yml

#
# Build with Debug config and Release runtimeConfiguration
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/global-build-job.yml
    buildConfig: release
    platforms:
    - Linux_x64
    - Windows_NT_x64
    jobParameters:
      testGroup: innerloop
      nameSuffix: Runtime_Debug
      buildArgs: -s clr+libs+installer -c debug -runtimeConfiguration release

#
# Build with Release config and Release runtimeConfiguration
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/global-build-job.yml
    buildConfig: debug
    platforms:
    - Linux_x64
    - Windows_NT_x64
    jobParameters:
      testGroup: innerloop
      nameSuffix: Runtime_Release
      buildArgs: -s clr+libs+installer -c release -runtimeConfiguration release
