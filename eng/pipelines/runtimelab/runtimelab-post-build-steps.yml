parameters:
  buildConfig: ''
  archType: ''
  osGroup: ''
  osSubgroup: ''
  platform: ''
  pgoType: ''
  runtimeVariant: ''
  uploadTests: false
  smokeTestsOnly: true
  runSingleFileTests: true
  uploadIntermediateArtifacts: false

steps:
- ${{ if ne(parameters.archType, 'arm64') }}:

  # For NativeAOT-LLVM, we have just built the Wasm-targeting native artifacts (the runtime and libraries).
  # Now we need to build the cross-targeting compilers, RyuJit and ILC.

  - ${{ if eq(parameters.archType, 'wasm') }}:
    - script: $(Build.SourcesDirectory)/build$(scriptExt) clr.alljits+clr.wasmjit+nativeaot.ilc+nativeaot.build -c $(buildConfigUpper)
      displayName: Build the ILC and RyuJit cross-compilers

  - ${{ if eq(parameters.buildConfig, 'Release') }}:
    - script: $(Build.SourcesDirectory)/build$(scriptExt) libs.tests -c Release
      displayName: Build libraries tests
    - script: $(Build.SourcesDirectory)/build$(scriptExt) libs.tests -c Release -test
      displayName: Run libraries tests

  # Build coreclr native test output
  - ${{ if eq(parameters.platform, 'Browser_wasm_win') }}:
    - script: |
        call $(Build.SourcesDirectory)\wasm-tools\emsdk\emsdk_env
        $(Build.SourcesDirectory)/src/tests/build$(scriptExt) nativeaot $(buildConfigUpper) ${{ parameters.archType }} targetsNonWindows skipnative /p:SmokeTestsOnly=${{ parameters.smokeTestsOnly }}
      displayName: Build WebAssembly tests
  - ${{ elseif eq(parameters.osGroup, 'windows') }}:
    - script: $(Build.SourcesDirectory)/src/tests/build$(scriptExt) nativeaot $(buildConfigUpper) ${{ parameters.archType }} /p:NativeAotMultimodule=true /p:SmokeTestsOnly=${{ parameters.smokeTestsOnly }}
      displayName: Build tests
  - ${{ else }}:
    - script: $(Build.SourcesDirectory)/src/tests/build$(scriptExt) nativeaot $(buildConfigUpper) ${{ parameters.archType }} /p:SmokeTestsOnly=true
      displayName: Build tests

  - ${{ if eq(parameters.runSingleFileTests, true) }}:
    - ${{ if eq(parameters.platform, 'Browser_wasm_win') }}:
      - script: |
          call $(Build.SourcesDirectory)\wasm-tools\emsdk\emsdk_env
          $(Build.SourcesDirectory)/src/tests/run$(scriptExt) runnativeaottests $(buildConfigUpper) ${{ parameters.archType }}
        displayName: Run WebAssembly tests in single file mode
    - ${{ elseif eq(parameters.osGroup, 'windows') }}:
      - script: $(Build.SourcesDirectory)/src/tests/run$(scriptExt) runnativeaottests $(buildConfigUpper) ${{ parameters.archType }}
        displayName: Run tests in single file mode
    - ${{ else }}:
      - script: $(Build.SourcesDirectory)/src/tests/run$(scriptExt) --runnativeaottests $(buildConfigUpper) ${{ parameters.archType }}
        displayName: Run tests in single file mode

  - ${{ if eq(parameters.osGroup, 'windows') }}:
    - script: $(Build.SourcesDirectory)/src/tests/run$(scriptExt) runnativeaottests nativeaotmultimodule $(buildConfigUpper) ${{ parameters.archType }}
      displayName: Run tests in multifile mode

# Upload unsigned artifacts
- ${{ if eq(parameters.uploadIntermediateArtifacts, true) }}:
  - template: /eng/pipelines/common/upload-intermediate-artifacts-step.yml
    parameters:
      name: ${{ parameters.platform }}
